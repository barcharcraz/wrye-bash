# -*- coding: utf-8 -*-
#
# GPL License and Copyright Notice ============================================
#  This file is part of Wrye Bash.
#
#  Wrye Bash is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation; either version 2
#  of the License, or (at your option) any later version.
#
#  Wrye Bash is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Wrye Bash; if not, write to the Free Software Foundation,
#  Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#  Wrye Bash copyright (C) 2005-2009 Wrye, 2010-2015 Wrye Bash Team
#  https://github.com/wrye-bash
#
# =============================================================================

#--Game ESM/ESP/BSA files
#  These filenames need to be in lowercase,
bethDataFiles = {
    #--Vanilla
    'oblivion.esm',
    'oblivion_1.1.esm',
    'oblivion_si.esm',
    'oblivion - meshes.bsa',
    'oblivion - misc.bsa',
    'oblivion - sounds.bsa',
    'oblivion - textures - compressed.bsa',
    'oblivion - textures - compressed.bsa.orig',
    'oblivion - voices1.bsa',
    'oblivion - voices2.bsa',
    #--Shivering Isles
    'dlcshiveringisles.esp',
    'dlcshiveringisles - meshes.bsa',
    'dlcshiveringisles - sounds.bsa',
    'dlcshiveringisles - textures.bsa',
    'dlcshiveringisles - voices.bsa',
}

#--Every file in the Data directory from Bethsoft
allBethFiles = {
    # Section 1: Vanilla files
    'Credits.txt',
    'Oblivion - Meshes.bsa',
    'Oblivion - Misc.bsa',
    'Oblivion - Sounds.bsa',
    'Oblivion - Textures - Compressed.bsa',
    'Oblivion - Voices1.bsa',
    'Oblivion - Voices2.bsa',
    'Oblivion.esm',
    'Music\\Battle\\battle_01.mp3',
    'Music\\Battle\\battle_02.mp3',
    'Music\\Battle\\battle_03.mp3',
    'Music\\Battle\\battle_04.mp3',
    'Music\\Battle\\battle_05.mp3',
    'Music\\Battle\\battle_06.mp3',
    'Music\\Battle\\battle_07.mp3',
    'Music\\Battle\\battle_08.mp3',
    'Music\\Dungeon\\Dungeon_01_v2.mp3',
    'Music\\Dungeon\\dungeon_02.mp3',
    'Music\\Dungeon\\dungeon_03.mp3',
    'Music\\Dungeon\\dungeon_04.mp3',
    'Music\\Dungeon\\dungeon_05.mp3',
    'Music\\Explore\\atmosphere_01.mp3',
    'Music\\Explore\\atmosphere_03.mp3',
    'Music\\Explore\\atmosphere_04.mp3',
    'Music\\Explore\\atmosphere_06.mp3',
    'Music\\Explore\\atmosphere_07.mp3',
    'Music\\Explore\\atmosphere_08.mp3',
    'Music\\Explore\\atmosphere_09.mp3',
    'Music\\Public\\town_01.mp3',
    'Music\\Public\\town_02.mp3',
    'Music\\Public\\town_03.mp3',
    'Music\\Public\\town_04.mp3',
    'Music\\Public\\town_05.mp3',
    'Music\\Special\\death.mp3',
    'Music\\Special\\success.mp3',
    'Music\\Special\\tes4title.mp3',
    'Shaders\\shaderpackage001.sdp',
    'Shaders\\shaderpackage002.sdp',
    'Shaders\\shaderpackage003.sdp',
    'Shaders\\shaderpackage004.sdp',
    'Shaders\\shaderpackage005.sdp',
    'Shaders\\shaderpackage006.sdp',
    'Shaders\\shaderpackage007.sdp',
    'Shaders\\shaderpackage008.sdp',
    'Shaders\\shaderpackage009.sdp',
    'Shaders\\shaderpackage010.sdp',
    'Shaders\\shaderpackage011.sdp',
    'Shaders\\shaderpackage012.sdp',
    'Shaders\\shaderpackage013.sdp',
    'Shaders\\shaderpackage014.sdp',
    'Shaders\\shaderpackage015.sdp',
    'Shaders\\shaderpackage016.sdp',
    'Shaders\\shaderpackage017.sdp',
    'Shaders\\shaderpackage018.sdp',
    'Shaders\\shaderpackage019.sdp',
    'Video\\2k games.bik',
    'Video\\bethesda softworks HD720p.bik',
    'Video\\CreditsMenu.bik',
    'Video\\game studios.bik',
    'Video\\Map loop.bik',
    'Video\\Oblivion iv logo.bik',
    'Video\\Oblivion Legal.bik',
    'Video\\OblivionIntro.bik',
    'Video\\OblivionOutro.bik',
    # Section 2: SI
    'DLCShiveringIsles - Meshes.bsa',
    'DLCShiveringIsles - Textures.bsa',
    'DLCShiveringIsles - Sounds.bsa',
    'DLCShiveringIsles - Voices.bsa',
    'DLCShiveringIsles.esp',
    'Textures\\Effects\\TerrainNoise.dds',
    # Section 3: DLCs
    'DLCBattlehornCastle.bsa',
    'DLCBattlehornCastle.esp',
    'DLCFrostcrag.bsa',
    'DLCFrostcrag.esp',
    'DLCHorseArmor.bsa',
    'DLCHorseArmor.esp',
    'DLCMehrunesRazor.esp',
    'DLCOrrery.bsa',
    'DLCOrrery.esp',
    'DLCSpellTomes.esp',
    'DLCThievesDen.bsa',
    'DLCThievesDen.esp',
    'DLCVileLair.bsa',
    'DLCVileLair.esp',
    'Knights.bsa',
    'Knights.esp',
    'DLCList.txt',
}

# Function Info ---------------------------------------------------------------
conditionFunctionData = ( #--0: no param; 1: int param; 2: formid param
    (153, 'CanHaveFlames', 0, 0),
    (127, 'CanPayCrimeGold', 0, 0),
    ( 14, 'GetActorValue', 1, 0),
    ( 61, 'GetAlarmed', 0, 0),
    (190, 'GetAmountSoldStolen', 0, 0),
    (  8, 'GetAngle', 1, 0),
    ( 81, 'GetArmorRating', 0, 0),
    (274, 'GetArmorRatingUpperBody', 0, 0),
    ( 63, 'GetAttacked', 0, 0),
    (264, 'GetBarterGold', 0, 0),
    (277, 'GetBaseActorValue', 1, 0),
    (229, 'GetClassDefaultMatch', 0, 0),
    ( 41, 'GetClothingValue', 0, 0),
    (122, 'GetCrime', 2, 1),
    (116, 'GetCrimeGold', 0, 0),
    (110, 'GetCurrentAIPackage', 0, 0),
    (143, 'GetCurrentAIProcedure', 0, 0),
    ( 18, 'GetCurrentTime', 0, 0),
    (148, 'GetCurrentWeatherPercent', 0, 0),
    (170, 'GetDayOfWeek', 0, 0),
    ( 46, 'GetDead', 0, 0),
    ( 84, 'GetDeadCount', 2, 0),
    (203, 'GetDestroyed', 0, 0),
    ( 45, 'GetDetected', 2, 0),
    (180, 'GetDetectionLevel', 2, 0),
    ( 35, 'GetDisabled', 0, 0),
    ( 39, 'GetDisease', 0, 0),
    ( 76, 'GetDisposition', 2, 0),
    (  1, 'GetDistance', 2, 0),
    (215, 'GetDoorDefaultOpen', 0, 0),
    (182, 'GetEquipped', 2, 0),
    ( 73, 'GetFactionRank', 2, 0),
    ( 60, 'GetFactionRankDifference', 2, 2),
    (128, 'GetFatiguePercentage', 0, 0),
    (288, 'GetFriendHit', 2, 0),
    (160, 'GetFurnitureMarkerID', 0, 0),
    ( 74, 'GetGlobalValue', 2, 0),
    ( 48, 'GetGold', 0, 0),
    ( 99, 'GetHeadingAngle', 2, 0),
    (318, 'GetIdleDoneOnce', 0, 0),
    (338, 'GetIgnoreFriendlyHits', 0, 0),
    ( 67, 'GetInCell', 2, 0),
    (230, 'GetInCellParam', 2, 2),
    ( 71, 'GetInFaction', 2, 0),
    ( 32, 'GetInSameCell', 2, 0),
    (305, 'GetInvestmentGold', 0, 0),
    (310, 'GetInWorldspace', 2, 0),
    ( 91, 'GetIsAlerted', 0, 0),
    ( 68, 'GetIsClass', 2, 0),
    (228, 'GetIsClassDefault', 2, 0),
    ( 64, 'GetIsCreature', 0, 0),
    (161, 'GetIsCurrentPackage', 2, 0),
    (149, 'GetIsCurrentWeather', 2, 0),
    (237, 'GetIsGhost', 0, 0),
    ( 72, 'GetIsID', 2, 0),
    (254, 'GetIsPlayableRace', 0, 0),
    (224, 'GetIsPlayerBirthsign', 2, 0),
    ( 69, 'GetIsRace', 2, 0),
    (136, 'GetIsReference', 2, 0),
    ( 70, 'GetIsSex', 1, 0),
    (246, 'GetIsUsedItem', 2, 0),
    (247, 'GetIsUsedItemType', 1, 0),
    ( 47, 'GetItemCount', 2, 0),
    (107, 'GetKnockedState', 0, 0),
    ( 80, 'GetLevel', 0, 0),
    ( 27, 'GetLineOfSight', 2, 0),
    (  5, 'GetLocked', 0, 0),
    ( 65, 'GetLockLevel', 0, 0),
    (320, 'GetNoRumors', 0, 0),
    (255, 'GetOffersServicesNow', 0, 0),
    (157, 'GetOpenState', 0, 0),
    (193, 'GetPCExpelled', 2, 0),
    (199, 'GetPCFactionAttack', 2, 0),
    (195, 'GetPCFactionMurder', 2, 0),
    (197, 'GetPCFactionSteal', 2, 0),
    (201, 'GetPCFactionSubmitAuthority', 2, 0),
    (249, 'GetPCFame', 0, 0),
    (132, 'GetPCInFaction', 2, 0),
    (251, 'GetPCInfamy', 0, 0),
    (129, 'GetPCIsClass', 2, 0),
    (130, 'GetPCIsRace', 2, 0),
    (131, 'GetPCIsSex', 1, 0),
    (312, 'GetPCMiscStat', 1, 0),
    (225, 'GetPersuasionNumber', 0, 0),
    ( 98, 'GetPlayerControlsDisabled', 0, 0),
    (365, 'GetPlayerInSEWorld',0,0),
    (362, 'GetPlayerHasLastRiddenHorse', 0, 0),
    (  6, 'GetPos', 1, 0),
    ( 56, 'GetQuestRunning', 2, 0),
    ( 79, 'GetQuestVariable', 2, 1),
    ( 77, 'GetRandomPercent', 0, 0),
    (244, 'GetRestrained', 0, 0),
    ( 24, 'GetScale', 0, 0),
    ( 53, 'GetScriptVariable', 2, 1),
    ( 12, 'GetSecondsPassed', 0, 0),
    ( 66, 'GetShouldAttack', 2, 0),
    (159, 'GetSitting', 0, 0),
    ( 49, 'GetSleeping', 0, 0),
    ( 58, 'GetStage', 2, 0),
    ( 59, 'GetStageDone', 2, 1),
    ( 11, 'GetStartingAngle', 1, 0),
    ( 10, 'GetStartingPos', 1, 0),
    ( 50, 'GetTalkedToPC', 0, 0),
    (172, 'GetTalkedToPCParam', 2, 0),
    (361, 'GetTimeDead', 0, 0),
    (315, 'GetTotalPersuasionNumber', 0, 0),
    (144, 'GetTrespassWarningLevel', 0, 0),
    (242, 'GetUnconscious', 0, 0),
    (259, 'GetUsedItemActivate', 0, 0),
    (258, 'GetUsedItemLevel', 0, 0),
    ( 40, 'GetVampire', 0, 0),
    (142, 'GetWalkSpeed', 0, 0),
    (108, 'GetWeaponAnimType', 0, 0),
    (109, 'GetWeaponSkillType', 0, 0),
    (147, 'GetWindSpeed', 0, 0),
    (154, 'HasFlames', 0, 0),
    (214, 'HasMagicEffect', 2, 0),
    (227, 'HasVampireFed', 0, 0),
    (353, 'IsActor', 0, 0),
    (314, 'IsActorAVictim', 0, 0),
    (313, 'IsActorEvil', 0, 0),
    (306, 'IsActorUsingATorch', 0, 0),
    (280, 'IsCellOwner', 2, 2),
    (267, 'IsCloudy', 0, 0),
    (150, 'IsContinuingPackagePCNear', 0, 0),
    (163, 'IsCurrentFurnitureObj', 2, 0),
    (162, 'IsCurrentFurnitureRef', 2, 0),
    (354, 'IsEssential', 0, 0),
    (106, 'IsFacingUp', 0, 0),
    (125, 'IsGuard', 0, 0),
    (282, 'IsHorseStolen', 0, 0),
    (112, 'IsIdlePlaying', 0, 0),
    (289, 'IsInCombat', 0, 0),
    (332, 'IsInDangerousWater', 0, 0),
    (300, 'IsInInterior', 0, 0),
    (146, 'IsInMyOwnedCell', 0, 0),
    (285, 'IsLeftUp', 0, 0),
    (278, 'IsOwner', 2, 0),
    (176, 'IsPCAMurderer', 0, 0),
    (175, 'IsPCSleeping', 0, 0),
    (171, 'IsPlayerInJail', 0, 0),
    (358, 'IsPlayerMovingIntoNewSpace', 0, 0),
    (339, 'IsPlayersLastRiddenHorse', 0, 0),
    (266, 'IsPleasant', 0, 0),
    ( 62, 'IsRaining', 0, 0),
    (327, 'IsRidingHorse', 0, 0),
    (287, 'IsRunning', 0, 0),
    (103, 'IsShieldOut', 0, 0),
    (286, 'IsSneaking', 0, 0),
    ( 75, 'IsSnowing', 0, 0),
    (223, 'IsSpellTarget', 2, 0),
    (185, 'IsSwimming', 0, 0),
    (141, 'IsTalking', 0, 0),
    (265, 'IsTimePassing', 0, 0),
    (102, 'IsTorchOut', 0, 0),
    (145, 'IsTrespassing', 0, 0),
    (329, 'IsTurnArrest', 0, 0),
    (111, 'IsWaiting', 0, 0),
    (101, 'IsWeaponOut', 0, 0),
    (309, 'IsXBox', 0, 0),
    (104, 'IsYielding', 0, 0),
    ( 36, 'MenuMode', 1, 0),
    ( 42, 'SameFaction', 2, 0),
    (133, 'SameFactionAsPC', 0, 0),
    ( 43, 'SameRace', 2, 0),
    (134, 'SameRaceAsPC', 0, 0),
    ( 44, 'SameSex', 2, 0),
    (135, 'SameSexAsPC', 0, 0),
    (323, 'WhichServiceMenu', 0, 0),
    )
allConditions = set(entry[0] for entry in conditionFunctionData)
fid1Conditions = set(entry[0] for entry in conditionFunctionData if entry[2] == 2)
fid2Conditions = set(entry[0] for entry in conditionFunctionData if entry[3] == 2)

#--List of GMST's in the main plugin (Oblivion.esm) that have 0x00000000
#  as the form id.  Any GMST as such needs it Editor Id listed here.
gmstEids = [
    'fAbsorbBoltGrowWidth', 'fAbsorbBoltSmallWidth', 'fAbsorbBoltsRadius',
    'fAbsorbBoltsRadiusStrength', 'fAbsorbMoveSpeed', 'fAbsorbSegmentLength',
    'fAbsorbSegmentVariance', 'fAbsorbTortuosityVariance', 'fActorAnimZAdjust',
    'fActorArmorDesirabilitySkillMult', 'fActorLuckSkillMult',
    'fActorSwimBreathDamage', 'fActorTurnAnimMinTime',
    'fActorWeaponDesirabilityDamageMult', 'fActorWeaponDesirabilitySkillMult',
    'fAIAcquireObjectDistance', 'fAiAquireKillBase', 'fAiAquireKillMult',
    'fAiAquirePickBase', 'fAiAquirePickMult', 'fAiAquireStealBase',
    'fAiAquireStealMult', 'fAIAwareofPlayerTimer', 'fAIBestHeadTrackDistance',
    'fAICombatFleeScoreThreshold', 'fAICombatNoAreaEffectAllyDistance',
    'fAICombatNoTargetLOSPriorityMult', 'fAICombatSlopeDifference',
    'fAICombatTargetUnreachablePriorityMult',
    'fAICombatUnreachableTargetPriorityMult', 'fAIConversationExploreTime',
    'fAIDefaultAttackDuringAttackMult', 'fAIDefaultAttackDuringBlockMult',
    'fAIDefaultAttackDuringUnconsciousBonus', 'fAIDefaultAttackHandBonus',
    'fAIDefaultAttackNoAttackMult', 'fAIDefaultAttackSkillBase',
    'fAIDefaultBlockSkillBase', 'fAIDefaultBuffStandoffDistance',
    'fAIDefaultDodgeBackDuringAttackMult', 'fAIDefaultDodgeBackNoAttackMult',
    'fAIDefaultDodgeBackwardMaxTime', 'fAIDefaultDodgeBackwardMinTime',
    'fAIDefaultDodgeDuringAttackMult', 'fAIDefaultDodgeFatigueBase',
    'fAIDefaultDodgeFatigueMult', 'fAIDefaultDodgeForwardMaxTime',
    'fAIDefaultDodgeForwardMinTime', 'fAIDefaultDodgeForwardNotAttackingMult',
    'fAIDefaultDodgeForwardWhileAttackingMult',
    'fAIDefaultDodgeLeftRightMaxTime', 'fAIDefaultDodgeLeftRightMinTime',
    'fAIDefaultDodgeNoAttackMult', 'fAIDefaultDodgeSpeedBase',
    'fAIDefaultDodgeSpeedMult', 'fAIDefaultGroupStandoffDistance',
    'fAIDefaultHoldMaxTime', 'fAIDefaultHoldMinTime', 'fAIDefaultIdleMaxTime',
    'fAIDefaultIdleMinTime', 'fAIDefaultMaximumRangeMult',
    'fAIDefaultOptimalRangeMult', 'fAIDefaultPowerAttackFatigueBase',
    'fAIDefaultPowerAttackFatigueMult',
    'fAIDefaultPowerAttackRecoilStaggerBonus',
    'fAIDefaultPowerAttackUnconsciousBonus',
    'fAIDefaultRangedStandoffDistance', 'fAIDefaultRushingAttackDistanceMult',
    'fAIDefaultSpeechMult', 'fAIDefaultSwitchToMeleeDistance',
    'fAIDefaultSwitchToRangedDistance', 'fAIDodgeDecisionBase',
    'fAIDodgeFavorLeftRightMult', 'fAIDodgeVerticalRangedAttackMult',
    'fAIDodgeWalkChance', 'fAIEnergyLevelBase', 'fAIEngergyLevelMult',
    'fAIEscortWaitDistanceExterior', 'fAIEscortWaitDistanceInterior',
    'fAIExteriorSpectatorDetection', 'fAIExteriorSpectatorDistance',
    'fAIFaceTargetAnimationAngle', 'fAIFleeConfMult', 'fAIFleeSuccessTimeout',
    'fAIGreetingTimer', 'fAIIdleAnimationDistance', 'fAIIdleWaitTime',
    'fAIInteriorHeadTrackMult', 'fAIInteriorSpectatorDetection',
    'fAIInteriorSpectatorDistance', 'fAIMagicSpellMult', 'fAIMagicTimer',
    'fAIMaxHeadTrackDistanceFromPC', 'fAIMaxWanderTime', 'fAIMeleeArmorMult',
    'fAIMeleeHandMult', 'fAIMeleeWeaponMult', 'fAIMinGreetingDistance',
    'fAIMoveDistanceToRecalcFollowPath', 'fAINPCSpeechMult',
    'fAIPowerAttackCreatureChance', 'fAIPowerAttackFatigueBase',
    'fAIPowerAttackFatigueMult', 'fAIPowerAttackKnockdownBonus',
    'fAIPowerAttackNPCChance', 'fAIPursueDistanceLineOfSight',
    'fAIRadiusToRunDetectionExterior', 'fAIRadiusToRunDetectionInterior',
    'fAIRangedWeaponMult', 'fAIRangMagicSpellMult',
    'fAISocialchanceForConversationInterior',
    'fAISocialRadiusToTriggerConversationInterior', 'fAISpectatorCommentTimer',
    'fAItalktoNPCtimer', 'fAItalktosameNPCtimer',
    'fAIUpdateMovementRestrictionsDistance', 'fAIYieldDurationBase',
    'fAIYieldDurationMult', 'fAIYieldMult', 'fAlchemyGoldMult',
    'fArmorRatingBase', 'fArmorRatingConditionBase',
    'fArmorRatingConditionMult', 'fArmorRatingMax', 'fArmorWeightLightMaxMod',
    'fArrowAgeMax', 'fArrowBounceBlockPercentage', 'fArrowBounceLinearSpeed',
    'fArrowBounceRotateSpeed', 'fArrowBowTimerBase', 'fArrowBowTimerMult',
    'fArrowFakeMass', 'fArrowFOVTimeChange', 'fArrowFOVTimeStart',
    'fArrowFOVZoom', 'fArrowGravityBase', 'fArrowGravityMin',
    'fArrowGravityMult', 'fArrowMaxDistance', 'fArrowOptimalDistance',
    'fArrowSpeedMult', 'fArrowWeakGravity', 'fArrowWeakSpeed',
    'fAttributeClassPrimaryBonus', 'fAttributeClassSecondaryBonus',
    'fBarterBuyBase', 'fBarterBuyMult', 'fBarterDispBase',
    'fBarterDispositionMod', 'fBarterHaggleBase', 'fBarterHaggleCurve',
    'fBarterHaggleDispMult', 'fBarterHaggleMax', 'fBarterSellMult',
    'fBlinkDelayMax', 'fBlinkDelayMin', 'fBlinkDownTime', 'fBlinkUpTime',
    'fBlockAmountHandToHandMult', 'fBlockAmountWeaponMult', 'fBlockMax',
    'fBlockScoreNoShieldMult', 'fBlockSkillBase', 'fBlockSkillMult',
    'fBowHoldTimer', 'fBribeCostCurve', 'fBribeMult', 'fBribeNPCLevelMult',
    'fBribeSpeechcraftMult', 'fBuoyancyCloth', 'fBuoyancyDirt',
    'fBuoyancyGlass', 'fBuoyancyGrass', 'fBuoyancyMetal', 'fBuoyancyMultBody',
    'fBuoyancyMultExtremity', 'fBuoyancyOrganic', 'fBuoyancySkin',
    'fBuoyancyStone', 'fBuoyancyWater', 'fBuoyancyWood',
    'fChameleonMaxRefraction', 'fChameleonMinRefraction',
    'fCharacterControllerMultipleStepSpeed', 'fChase3rdPersonVanityXYMult',
    'fChase3rdPersonZUnitsPerSecond', 'fCheckDeadBodyTimer',
    'fCheckPositionFallDistance', 'fClothingArmorBase', 'fClothingArmorScale',
    'fClothingBase', 'fCombatAdvanceNormalAttackChance',
    'fCombatBetweenAdvanceTimer', 'fCombatBuffMaxTimer',
    'fCombatBuffStandoffTimer', 'fCombatCollectAlliesTimer',
    'fCombatDamageScale', 'fCombatDistance', 'fCombatDistanceMin',
    'fCombatForwardAttackChance', 'fCombatInTheWayTimer',
    'fCombatLineOfSightTimer', 'fCombatMaxHoldScore',
    'fCombatMinEngageDistance', 'fCombatMonitorBuffsTimer',
    'fCombatRangedStandoffTimer', 'fCombatRelativeDamageMod',
    'fCombatRoundAmount', 'fCombatSpeakTauntChance', 'fCombatStaffTimer',
    'fCombatStepAdvanceDistance', 'fCombatVulnerabilityMod',
    'fCreatureCalcCombat', 'fCreatureCalcDamage', 'fCreatureCalcMagic',
    'fCreatureCalcStealth', 'fCrimeDispAttack', 'fCrimeDispMurder',
    'fCrimeDispPersonal', 'fCrimeDispPickpocket', 'fCrimeDispSteal',
    'fCrimeDispTresspass', 'fCrimeGoldSteal', 'fCrimeSoundBase',
    'fCrimeSoundMult', 'fDamageSkillBase', 'fDamageSneakAttackMult',
    'fDeathForceDamageMax', 'fDeathForceDamageMin', 'fDeathForceForceMax',
    'fDeathForceForceMin', 'fDeathSoundMaxDistance', 'fDebrisMaxVelocity',
    'fDebrisMinExtent', 'fDefaultNoticeTextDisplayTime', 'fDemandBase',
    'fDemandMult', 'fDetectionActionTimer', 'fDetectionNightEyeBonus',
    'fDetectionTimerSetting', 'fDifficultyDefaultValue', 'fDifficultyMaxValue',
    'fDifficultyMinValue', 'fDispActorBountyBase', 'fDispActorBountyMult',
    'fDispActorInfamyBase', 'fDispActorInfamyMult', 'fDispActorPerBase',
    'fDispInfamyMax', 'fDispositionReduction', 'fDispTargetBountyMult',
    'fDispTargetDiseaseBase', 'fDispTargetFactionMult',
    'fDispTargetFactionRankMult', 'fDispTargetFameMult',
    'fDispTargetInfamyMult', 'fDispTargetPerBase', 'fDispTargetRaceMult',
    'fDispTargetWeaponBase', 'fDistanceExteriorReactCombat',
    'fDistanceInteriorReactCombat', 'fDistancetoPlayerforConversations',
    'fEnchantCommonLimit', 'fEnchantGrandLimit', 'fEnchantGreaterLimit',
    'fEnchantLesserLimit', 'fEnchantmentEffectPointsMult',
    'fEnchantmentPointsMult', 'fEnchantPettyLimit', 'fEnemyHealthBarTimer',
    'fEssentialDeathTime', 'fEssentialHealthPercentReGain',
    'fExpressionChangePerSec', 'fExpressionStrengthAdd',
    'fFadeToBlackFadeSeconds', 'fFatigueBlockBase', 'fFatigueBlockMult',
    'fFatigueCastMult', 'fFightAbleToDetectTimer', 'fFightAggrMult',
    'fFightDispBase', 'fFightDispMult', 'fFightDistanceBase',
    'fFightDistanceMult', 'fFightFriendDispMult', 'fFirstPersonHandFollowMult',
    'fFirstPersonScaleSeconds', 'fFleeDistanceExterior',
    'fFleeDistanceInterior', 'fFleeIsSafeTimer', 'fFriendHitTimer',
    'fFurnitureMarker05DeltaX', 'fFurnitureMarker05DeltaY',
    'fFurnitureMarker05DeltaZ', 'fFurnitureMarker05HeadingDelta',
    'fFurnitureMarker06DeltaX', 'fFurnitureMarker06DeltaY',
    'fFurnitureMarker06DeltaZ', 'fFurnitureMarker06HeadingDelta',
    'fFurnitureMarker07DeltaX', 'fFurnitureMarker07DeltaY',
    'fFurnitureMarker07DeltaZ', 'fFurnitureMarker07HeadingDelta',
    'fFurnitureMarker08DeltaX', 'fFurnitureMarker08DeltaY',
    'fFurnitureMarker08DeltaZ', 'fFurnitureMarker08HeadingDelta',
    'fFurnitureMarker09DeltaX', 'fFurnitureMarker09DeltaY',
    'fFurnitureMarker09DeltaZ', 'fFurnitureMarker09HeadingDelta',
    'fFurnitureMarker10DeltaX', 'fFurnitureMarker10DeltaY',
    'fFurnitureMarker10DeltaZ', 'fFurnitureMarker10HeadingDelta',
    'fFurnitureMarker15DeltaX', 'fFurnitureMarker15DeltaY',
    'fFurnitureMarker15DeltaZ', 'fFurnitureMarker15HeadingDelta',
    'fFurnitureMarker16DeltaX', 'fFurnitureMarker16DeltaY',
    'fFurnitureMarker16DeltaZ', 'fFurnitureMarker16HeadingDelta',
    'fFurnitureMarker17DeltaX', 'fFurnitureMarker17DeltaY',
    'fFurnitureMarker17DeltaZ', 'fFurnitureMarker17HeadingDelta',
    'fFurnitureMarker18DeltaX', 'fFurnitureMarker18DeltaY',
    'fFurnitureMarker18DeltaZ', 'fFurnitureMarker18HeadingDelta',
    'fFurnitureMarker19DeltaX', 'fFurnitureMarker19DeltaY',
    'fFurnitureMarker19DeltaZ', 'fFurnitureMarker19HeadingDelta',
    'fFurnitureMarker20DeltaX', 'fFurnitureMarker20DeltaY',
    'fFurnitureMarker20DeltaZ', 'fFurnitureMarker20HeadingDelta', 'fGrabPower',
    'fHandDamageSkillBase', 'fHandDamageSkillMult', 'fHandDamageStrengthBase',
    'fHandDamageStrengthMult', 'fHandHealthMin',
    'fHostileActorExteriorDistance', 'fHostileActorInteriorDistance',
    'fImpactShaderMaxDistance', 'fImpactShaderMinMagnitude',
    'fInventoryDropTimer', 'fItemPointsMult', 'fJumpFallRiderMult',
    'fJumpFallSkillBase', 'fJumpFallSkillMult', 'fJumpFallTimeBase',
    'fJumpFallTimeMin', 'fJumpFallVelocityMin', 'fJumpHeightMin',
    'fJumpMoveBase', 'fJumpMoveMult', 'fKnockbackAgilBase',
    'fKnockbackAgilMult', 'fKnockbackDamageBase', 'fKnockbackDamageMult',
    'fKnockbackForceMax', 'fKnockbackTime', 'fKnockdownAgilBase',
    'fKnockdownAgilMult', 'fKnockdownDamageBase', 'fLeveledLockMult',
    'fLockLevelBase', 'fLockLevelMult', 'fLockPickAutoOffset',
    'fLockPickBreakBase', 'fLockPickBreakMult', 'fLockPickQualityBase',
    'fLockPickQualityMult', 'fLockSkillBase', 'fLockSkillMult',
    'fLockTrapGoOffBase', 'fLockTrapGoOffMult', 'fLowActorSpeedBoost',
    'fMagicAbsorbDistanceReachMult', 'fMagicAreaBaseCostMult',
    'fMagicAreaScale', 'fMagicAreaScaleMax', 'fMagicAreaScaleMin',
    'fMagicArmorPenaltyMax', 'fMagicArmorPenaltyMin',
    'fMagicBallMaximumDistance', 'fMagicBallOptimalDistance',
    'fMagicBoltDuration', 'fMagicBoltMaximumDistance',
    'fMagicBoltOptimalDistance', 'fMagicBoltSegmentLength',
    'fMagicCEEnchantMagOffset', 'fMagicCloudAreaMin', 'fMagicCloudDurationMin',
    'fMagicCloudFindTargetTime', 'fMagicCloudLifeScale',
    'fMagicCloudSizeScale', 'fMagicCloudSlowdownRate', 'fMagicCloudSpeedBase',
    'fMagicCloudSpeedScale', 'fMagicDefaultCEBarterFactor',
    'fMagicDefaultCEEnchantFactor', 'fMagicDefaultTouchDistance',
    'fMagicDiseaseTransferBase', 'fMagicDispelMagnitudeMult',
    'fMagicDurMagBaseCostMult', 'fMagicEnchantmentChargeBase',
    'fMagicEnchantmentChargeMult', 'fMagicEnchantmentDrainBase',
    'fMagicEnchantmentDrainMult', 'fMagicExplosionClutterMult',
    'fMagicExplosionIncorporealMult', 'fMagicExplosionIncorporealTime',
    'fMagicExplosionPowerBase', 'fMagicExplosionPowerMax',
    'fMagicExplosionPowerMin', 'fMagicExplosionPowerMult',
    'fMagicLevelMagnitudeMult', 'fMagicLightForwardOffset',
    'fMagicNightEyeAmbient', 'fMagicPlayerMinimumInvisibility',
    'fMagicProjectileBaseSpeed', 'fMagicProjectileMaxDistance',
    'fMagicRangeTargetCostMult', 'fMagicResistActorSkillBase',
    'fMagicResistActorSkillMult', 'fMagicResistTargetWillpowerBase',
    'fMagicResistTargetWillpowerMult', 'fMagicSpellLevelCostBase',
    'fMagicSpellLevelCostMult', 'fMagicSprayMaximumDistance',
    'fMagicSprayOptimalDistance', 'fMagicSunDamageBaseDamage',
    'fMagicSunDamageMinWeather', 'fMagicSunDamagePainInitialDelay',
    'fMagicSunDamagePainTimer', 'fMagicSunDamageScreenGlowMult',
    'fMagicSunDamageScreenGlowRateDown', 'fMagicSunDamageScreenGlowRateUp',
    'fMagicSunDamageSunHiddenScale', 'fMagicSunDamageWaterScale',
    'fMagicTelekinesisComplexMaxForce',
    'fMagicTelekinesisComplexObjectDamping',
    'fMagicTelekinesisComplexSpringDamping',
    'fMagicTelekinesisComplexSpringElasticity', 'fMagicTelekinesisDistanceMin',
    'fMagicTelekinesisMaxForce', 'fMagicTelekinesisMoveAccelerate',
    'fMagicTelekinesisMoveBase', 'fMagicTelekinesisMoveMax',
    'fMagicTelekinesisObjectDamping', 'fMagicTelekinesisSpringDamping',
    'fMagicTelekinesisSpringElasticity', 'fMagicTelekinesisThrow',
    'fMagicTrackingLimit', 'fMagicTrackingLimitComplex',
    'fMagicTrackingMultBall', 'fMagicTrackingMultBolt',
    'fMagicTrackingMultFog', 'fMagicUnitsPerFoot',
    'fMarksmanFatigueBurnPerSecond', 'fMarksmanFatigueBurnPerShot',
    'fMasserSpeed', 'fMasserZOffset', 'fMaximumWind', 'fMinDistanceUseHorse',
    'fMountedMaxLookingDown', 'fMoveEncumEffectNoWea', 'fMoveMaxFlySpeed',
    'fMoveMinFlySpeed', 'fMoveRunAthleticsMult', 'fMoveSwimRunAthleticsMult',
    'fMoveSwimRunBase', 'fMoveSwimWalkAthleticsMult', 'fMoveSwimWalkBase',
    'fMoveWeightMin', 'fNoticeTextTimePerCharacter', 'fObjectHitWeaponReach',
    'fObjectWeightPickupDetectionMult', 'fPainDelay',
    'fPathAvoidanceObstacleCheckTimeLimit', 'fPathAvoidanceTimeOut',
    'fPathAvoidanceWaitTimeLimit', 'fPathImpassableDoorPenalty',
    'fPathInvalidMovementTypePenalty', 'fPathMinimalUseDoorPenalty',
    'fPathMustLockpickPenalty', 'fPathNonFishSwimmingPenalty',
    'fPathNPCWadingPenalty', 'fPathPointFailureTimeLimit',
    'fPathPointForceAngleSnapDistance',
    'fPathPointMaxAngleDeltaTurnSpeedScalar', 'fPathPointReachDistance',
    'fPathPointReachDistanceError', 'fPathPointStartCheckDistance',
    'fPathPointTurnDistanceExterior', 'fPathPointTurnDistanceInterior',
    'fPathPointTurningSpeed', 'fPathPointWalkTime',
    'fPathPointZDistanceAllowance', 'fPathPreferredPointBonus',
    'fPathSpaceExitPenalty', 'fPathWaterExitPenalty', 'fPCBaseHealthMult',
    'fPCTurnAnimDeltaThreshold', 'fPCTurnAnimMinTime',
    'fPerkAthleticsApprenticeFatigueMult', 'fPerkAthleticsExpertFatigueMult',
    'fPerkAthleticsJourneymanFatigueMult', 'fPerkAthleticsMasterFatigueMult',
    'fPerkAthleticsNoviceFatigueMult', 'fPerkHeavyArmorExpertSpeedMult',
    'fPerkHeavyArmorJourneymanDamageMult', 'fPerkHeavyArmorMasterSpeedMult',
    'fPerkHeavyArmorNoviceDamageMult', 'fPerkHeavyArmorSinkGravityMult',
    'fPerkJumpFatigueExpertMult', 'fPerkLightArmorExpertSpeedMult',
    'fPerkLightArmorJourneymanDamageMult', 'fPerkLightArmorMasterRatingMult',
    'fPerkLightArmorNoviceDamageMult', 'fPerkSneakAttackMeleeApprenticeMult',
    'fPerkSneakAttackMeleeExpertMult', 'fPerkSneakAttackMeleeJourneymanMult',
    'fPerkSneakAttackMeleeMasterMult', 'fPerkSneakAttackMeleeNoviceMult',
    'fPersAdmireAggr', 'fPersAdmireConf', 'fPersAdmireEner',
    'fPersAdmireIntel', 'fPersAdmirePers', 'fPersAdmireResp',
    'fPersAdmireStre', 'fPersAdmireWillp', 'fPersBoastAggr', 'fPersBoastConf',
    'fPersBoastEner', 'fPersBoastIntel', 'fPersBoastPers', 'fPersBoastResp',
    'fPersBoastStre', 'fPersBoastWillp', 'fPersBullyAggr', 'fPersBullyConf',
    'fPersBullyEner', 'fPersBullyIntel', 'fPersBullyPers', 'fPersBullyResp',
    'fPersBullyStre', 'fPersBullyWillp', 'fPersJokeAggr', 'fPersJokeConf',
    'fPersJokeEner', 'fPersJokeIntel', 'fPersJokePers', 'fPersJokeResp',
    'fPersJokeStre', 'fPersJokeWillp', 'fPersuasionAccuracyMaxDisposition',
    'fPersuasionAccuracyMaxSelect', 'fPersuasionAccuracyMinDispostion',
    'fPersuasionAccuracyMinSelect', 'fPersuasionBaseValueMaxDisposition',
    'fPersuasionBaseValueMaxSelect', 'fPersuasionBaseValueMinDispostion',
    'fPersuasionBaseValueMinSelect', 'fPersuasionBaseValueShape',
    'fPersuasionMaxDisposition', 'fPersuasionMaxInput', 'fPersuasionMaxSelect',
    'fPersuasionMinDispostion', 'fPersuasionMinInput',
    'fPersuasionMinPercentCircle', 'fPersuasionMinSelect',
    'fPersuasionReactionHatePerk', 'fPersuasionReactionLike',
    'fPersuasionReactionLove', 'fPersuasionShape', 'fPickLevelBase',
    'fPickLevelMult', 'fPickNumBase', 'fPickNumMult', 'fPickPocketAmountBase',
    'fPickPocketMinChance', 'fPickPocketTargetSkillBase', 'fPickSpring1',
    'fPickSpring2', 'fPickSpring3', 'fPickSpring4', 'fPickSpring5',
    'fPickUpWeaponDelay', 'fPlayerDropDistance', 'fPlayerTeleportFadeSeconds',
    'fPotionMortPestleMult', 'fPotionT1CalMagMult', 'fPotionT1MagMult',
    'fPotionT1RetMagMult', 'fPotionT2CalDurMult', 'fPotionT2RetDurMult',
    'fPotionT3CalMagMult', 'fPotionT3RetMagMult', 'fPowerAttackDelay',
    'fProjectileCollisionImpulseScale', 'fProjectileKnockMinMass',
    'fProjectileKnockMultBiped', 'fProjectileKnockMultClutter',
    'fProjectileKnockMultProp', 'fProjectileKnockMultTrap',
    'fProjectileMaxDistance', 'fQuickKeyDownTimer', 'fRaceGeneticVariation',
    'fRandomDoorDistance', 'fReEquipArmorTime',
    'fReflectedAbsorbChanceReduction', 'fRegionGenNoiseFactor',
    'fRegionGenTreeSinkPower', 'fRegionObjectDensityPower',
    'fRemoteCombatMissedAttack', 'fRemoveExcessComplexDeadTime',
    'fRemoveExcessDeadTime', 'fRepairArmorerBase',
    'fRepairBreakApprenticeMult', 'fRepairCostMult', 'fRepairSkillBreakBase',
    'fRepairSkillBreakMult', 'fRepairStrengthMult', 'fRoadPointReachDistance',
    'fRumbleBlockStrength', 'fRumbleBlockTime', 'fRumbleHitBlockedStrength',
    'fRumbleHitBlockedTime', 'fRumbleHitStrength', 'fRumbleHitTime',
    'fRumblePainStrength', 'fRumblePainTime', 'fRumbleStruckStrength',
    'fRumbleStruckTime', 'fScrollCostMult', 'fSDRsDetTargOnHorseMult',
    'fSDRsLOSmpMult', 'fSDRsPeripheralScaling', 'fSDRsSkillCrimeGoldMult',
    'fSDRsSkillCVmult', 'fSDRsSkillEffectiveSneakCap',
    'fSDRsSkillNoLOSlightSpellMult', 'fSDRsSkillNoLOStorchMult',
    'fSDRsSleepSightMult', 'fSDRsSleepSoundMult',
    'fSDRsSoundMovementPenaltyMult', 'fSDRsSoundMult2Handed',
    'fSDRsSoundMultBlade', 'fSDRsSoundMultBlunt', 'fSDRsSoundMultBow',
    'fSDRsSoundMultCloth', 'fSDRsSoundMultEquip', 'fSDRsSoundMultHeavy',
    'fSDRsSoundMultLight', 'fSDRsSoundMultStaff', 'fSDRsSoundMultUnequip',
    'fSDRsSoundSkillEffectivenessCloth', 'fSDRsSoundSkillEffectivenessHeavy',
    'fSDRsSoundSkillEffectivenessLight', 'fSDRsSoundSneakEffectivenessCloth',
    'fSDRsSoundSneakEffectivenessHeavy', 'fSDRsSoundSneakEffectivenessLight',
    'fSDRsSoundSwimmingMult', 'fSDRsSoundTurningMult',
    'fSDRsSoundUnderWaterMult', 'fSDRsSoundWeapRunMult',
    'fSDRsSoundWeapSwimMult', 'fSearchPackageDistanceToTarget',
    'fSearchPackageTimer', 'fSecondsBetweenWindowUpdate', 'fSecundaZOffset',
    'fSeenDataUpdateRadius', 'fShaderShadowUpdateDistance',
    'fShockBoltGrowWidth', 'fShockBoltsLength', 'fShockBoltSmallWidth',
    'fShockBoltsRadius', 'fShockBoltsRadiusStrength',
    'fShockBranchBoltsRadius', 'fShockBranchBoltsRadiusStrength',
    'fShockBranchLifetime', 'fShockBranchSegmentLength',
    'fShockBranchSegmentVariance', 'fShockCastVOffset', 'fShockCoreColorB',
    'fShockCoreColorG', 'fShockCoreColorR', 'fShockGlowColorB',
    'fShockGlowColorG', 'fShockGlowColorR', 'fShockSegmentLength',
    'fShockSegmentVariance', 'fShockSubSegmentVariance',
    'fSittingMaxLookingDown', 'fSkillUseMajorMult', 'fSkillUseMinorMult',
    'fSkillUseSpecMult', 'fSneakExteriorDistanceMult', 'fSneakLostMin',
    'fSneakNoticedMin', 'fSneakSeenMin', 'fSneakSoundsMult',
    'fSneakSwimmingLightMult', 'fSneakUnseenMin',
    'fSortActorDistanceListTimer', 'fSpeechCraftBase', 'fSpeechCraftMult',
    'fSpellCastingDetectionHitActorMod', 'fSplashScale1', 'fSplashScale2',
    'fSplashScale3', 'fSplashSoundHeavy', 'fSplashSoundLight',
    'fSplashSoundMedium', 'fSplashSoundOutMult', 'fSplashSoundTimer',
    'fSplashSoundVelocityMult', 'fStatsHealthLevelMult',
    'fSubmergedAngularDamping', 'fSubmergedLinearDampingH',
    'fSubmergedLinearDampingV', 'fSubmergedLODDistance', 'fSubmergedMaxSpeed',
    'fSubmergedMaxWaterDistance', 'fSubSegmentVariance', 'fSunXExtreme',
    'fSunYExtreme', 'fSunZExtreme', 'fTargetSearchRadius',
    'fTorchEvaluationTimer', 'fTorchLightLevelInterior', 'fTrackDeadZoneXY',
    'fTrackDeadZoneZ', 'fTrackEyeXY', 'fTrackEyeZ', 'fTrackFudgeXY',
    'fTrackFudgeZ', 'fTrackJustAquiredDuration', 'fTrackMaxZ', 'fTrackMinZ',
    'fTrackSpeed', 'fTrackXY', 'fTreeSizeConversion',
    'fTreeTrunkToFoliageMultiplier', 'fUnderwaterFullDepth', 'fUpdateInterval',
    'fValueofItemForNoOwnership', 'fVanityModeAutoXSpeed',
    'fVanityModeAutoYDegrees', 'fVanityModeAutoYSpeed', 'fVanityModeDelay',
    'fVanityModeForceDefault', 'fVanityModeWheelDeadMin',
    'fVanityModeWheelDefault', 'fVanityModeWheelMax', 'fVanityModeWheelMin',
    'fVanityModeWheelMult', 'fVanityModeXMult', 'fVanityModeYMult',
    'fWeaponClutterKnockBipedScale', 'fWeaponClutterKnockMaxWeaponMass',
    'fWeaponClutterKnockMinClutterMass', 'fWeaponClutterKnockMult',
    'fWeatherCloudSpeedMax', 'fWeatherFlashDirectional', 'fWeatherTransAccel',
    'fWeatherTransMin', 'fWortalchmult', 'fWortcraftFatigueMag',
    'fWortcraftStrChanceDenom', 'fWortcraftStrCostDenom', 'fWortStrMult',
    'iAbsorbNumBolts', 'iActivatePickLength', 'iActorKeepTurnDegree',
    'iActorLuckSkillBase', 'iActorTurnDegree', 'iAICombatMaxAllySummonCount',
    'iAICombatMinDetection', 'iAICombatRestoreFatiguePercentage',
    'iAICombatRestoreHealthPercentage', 'iAICombatRestoreMagickaPercentage',
    'iAIDefaultAcrobaticDodgeChance', 'iAIDefaultDodgeChance',
    'iAIDefaultDodgeLeftRightChance', 'iAIDefaultDoNotAcquire',
    'iAIDefaultFleeDisabled', 'iAIDefaultIgnoreAlliesInArea',
    'iAIDefaultMeleeAlertAllowed', 'iAIDefaultPowerAttackBackwardChance',
    'iAIDefaultPowerAttackChance', 'iAIDefaultPowerAttackForwardChance',
    'iAIDefaultPowerAttackLeftChance', 'iAIDefaultPowerAttackNormalChance',
    'iAIDefaultPowerAttackRightChance', 'iAIDefaultPrefersRangedAttacks',
    'iAIDefaultRejectYield', 'iAIDefaultRushingAttackPercentChance',
    'iAIDefaultYieldEnabled', 'iAIDistanceRadiusMinLocation',
    'iAIFleeMaxHitCount', 'iAIFriendlyHitMinDisposition',
    'iAimingNumIterations', 'iAINPCRacePowerChance',
    'iAINumberActorsComplexScene', 'iAIYieldMaxHitCount', 'iAlertAgressionMin',
    'iAllowAlchemyDuringCombat', 'iAllowRechargeDuringCombat',
    'iAllowRepairDuringCombat', 'iAllyHitAllowed', 'iArmorBaseSkill',
    'iArmorDamageBootsChance', 'iArmorDamageCuirassChance',
    'iArmorDamageGauntletsChance', 'iArmorDamageGreavesChance',
    'iArmorDamageHelmChance', 'iArmorDamageShieldChance', 'iArmorWeightBoots',
    'iArmorWeightCuirass', 'iArmorWeightGauntlets', 'iArmorWeightGreaves',
    'iArrowInventoryChance', 'iArrowMaxRefCount', 'iBarterDispositionPenalty',
    'iBoneLODDistMult', 'iBribeAmountMax', 'iClassAcrobat', 'iClassAgent',
    'iClassArcher', 'iClassAssassin', 'iClassBarbarian', 'iClassBard',
    'iClassBattlemage', 'iClassCharactergenClass', 'iClassCrusader',
    'iClassHealer', 'iClassKnight', 'iClassMage', 'iClassMonk',
    'iClassNightblade', 'iClassPilgrim', 'iClassPriest', 'iClassRogue',
    'iClassScout', 'iClassSorcerer', 'iClassSpellsword', 'iClassThief',
    'iClassWarrior', 'iClassWitchhunter', 'iCollFreq',
    'iCombatCastDrainMinimumValue', 'iCombatHighPriorityModifier',
    'iCrimeDaysInPrisonMod', 'iCrimeGoldAttack', 'iCrimeGoldMinValue',
    'iCrimeGoldMurder', 'iCrimeGoldPickpocket', 'iCrimeGoldTresspass',
    'iCurrentTargetBonus', 'iDispBountyMax', 'iDispFameMax',
    'iDistancetoAttackedTarget', 'iFriendHitAllowed', 'iHairColor00',
    'iHairColor01', 'iHairColor02', 'iHairColor03', 'iHairColor04',
    'iHairColor05', 'iHairColor06', 'iHairColor07', 'iHairColor08',
    'iHairColor09', 'iHairColor10', 'iHairColor11', 'iHairColor12',
    'iHairColor13', 'iHairColor14', 'iHairColor15', 'iHighDamp',
    'iHighResponsibility', 'iHorseTurnDegreesPerSecond',
    'iHorseTurnDegreesRampUpPerSecond', 'iHoursToRespawnCell',
    'iInventoryAskQuantityAt', 'iInventoryMenuIdleDelay', 'iLevelUp01Mult',
    'iLevelUp02Mult', 'iLevelUp03Mult', 'iLevelUp04Mult', 'iLevelUp05Mult',
    'iLevelUp06Mult', 'iLevelUp07Mult', 'iLevelUp08Mult', 'iLevelUp09Mult',
    'iLevelUp10Mult', 'iLevelUpSkillCount', 'iLockLevelMaxAverage',
    'iLockLevelMaxEasy', 'iLockLevelMaxHard', 'iLockLevelMaxVeryEasy',
    'iLockLevelMaxVeryHard', 'iLowDamp', 'iMagicLightMaxCount',
    'iMagicMaxSummonedCreatureTypes', 'iMagnitudeLevelAffectsAll',
    'iMarksmanFatigueBurnPerSecondSkill', 'iMaxArrowsInQuiver',
    'iMaxPlayerSummonedCreatures', 'iMediumResponsiblityLevel',
    'iMerchantRespawnDay1', 'iMerchantRespawnDay2',
    'iNumberActorsAllowedToFollowPlayer',
    'iNumberActorsGoThroughLoadDoorInCombat', 'iNumberGuardsCrimeResponse',
    'iPerkAttackDisarmChance', 'iPerkBlockDisarmChance',
    'iPerkHandToHandBlockRecoilChance', 'iPerkHeavyArmorJumpSum',
    'iPerkHeavyArmorSinkSum', 'iPerkLightArmorMasterMinSum',
    'iPerkMarksmanKnockdownChance', 'iPerkMarksmanParalyzeChance',
    'iPersuasionAngleMax', 'iPersuasionAngleMin', 'iPersuasionBribeCrime',
    'iPersuasionBribeGold', 'iPersuasionBribeRefuse', 'iPersuasionBribeScale',
    'iPersuasionDemandDisposition', 'iPersuasionDemandGold',
    'iPersuasionDemandRefuse', 'iPersuasionDemandScale', 'iPersuasionInner',
    'iPersuasionMaxDisp', 'iPersuasionMiddle', 'iPersuasionOuter',
    'iPersuasionPower1', 'iPersuasionPower2', 'iPersuasionPower3',
    'iPlayerCustomClass', 'iQuickKeyIgnoreMillis', 'iRegionGenClusterAttempts',
    'iRegionGenClusterPasses', 'iRegionGenRandomnessType',
    'iRemoveExcessDeadComplexCount', 'iRemoveExcessDeadComplexTotalActorCount',
    'iRemoveExcessDeadCount', 'iRemoveExcessDeadTotalActorCount',
    'iSDRsApplyDetectLifeEffects', 'iSDRsChamCap', 'iSDRsChamLightEffect',
    'iSDRsChamSightEffPerc', 'iSDRsChamSkillEffPerc', 'iSDRsChamSoundEffPerc',
    'iSDRsChamTorchEffect', 'iSDRsCollisionBonus', 'iSDRsDbgDLNPC2NPC',
    'iSDRsDbgDLNPC2Player', 'iSDRsDbgDLPlayer2NPC', 'iSDRsDbgNoLOS',
    'iSDRsDbgPlayerMovingLight', 'iSDRsDbgWeaponEquipSound',
    'iSDRsDbgWeapPenaltyDetails', 'iSDRsDetectionPackage',
    'iSDRsDetLifeFlatBump', 'iSDRsDetLifeIntBumpType',
    'iSDRsDetLifeLOSBumpAmount', 'iSDRsDetLifeLOSBumpType',
    'iSDRsDetMaxAdjFatigue', 'iSDRsDetMaxAdjHealth', 'iSDRsDialoguePenalty',
    'iSDRsHeadlessCantHear', 'iSDRsHeadlessCantSee', 'iSDRsInvisSightEffPerc',
    'iSDRsInvisSkillEffPerc', 'iSDRsInvisSoundEffPerc',
    'iSDRsLightingBumpLightSpell', 'iSDRsLightingBumpTorch',
    'iSDRsLightingExpPercent', 'iSDRsPerkSneakJourneyman',
    'iSDRsShortRangeMaxBump', 'iSDRsShortRangeMaxDistance',
    'iSDRsShortRangeMinDistance', 'iSDRsSilencePerk',
    'iSDRsSoundBaseMovementPenalty', 'iSDRsSoundBumpLanding',
    'iSDRsSoundBumpSplash', 'iSDRsTalkDialogueRadius', 'iSDRsTalkPenalty',
    'iSDRsTrackingBonus', 'iSDRsVisionThresholdDay',
    'iSDRsVisionThresholdNight', 'iSDRsVisionThresholdTwilight',
    'iSecundaSize', 'iShockBranchNumBolts', 'iShockBranchSegmentsPerBolt',
    'iShockDebug', 'iShockNumBolts', 'iShockSegmentsPerBolt',
    'iShockSubSegments', 'iSkillApprenticeMin', 'iSkillExpertMin',
    'iSkillJourneymanMin', 'iSkillMasterMin', 'iSneakSkillUseDistance',
    'iSpeakSoundLipDistance', 'iTrainingSkills', 'iUpdateGroups',
    'iVampirismAgeOffset', 'iWortcraftMaxEffectsApprentice',
    'iWortcraftMaxEffectsExpert', 'iWortcraftMaxEffectsJourneyman',
    'iWortcraftMaxEffectsMaster', 'iWortcraftMaxEffectsNovice',
    'sBloodTextureDefault', 'sBloodTextureExtra1', 'sBloodTextureExtra2',
    'sBloodParticleDefault', 'sBloodParticleExtra1', 'sBloodParticleExtra2',
    'sAutoSaving', 'sFloraFailureMessage', 'sFloraSuccessMessage',
    'sQuickSaving', 'sFastTravelHorseatGate', 'sLoadingArea', 'sQuickLoading',
    'sNoCharge',
]

"""
GLOB record tweaks used by patcher.patchers.multitweak_settings.GmstTweaker

Each entry is a tuple in the following format:
  (DisplayText, MouseoverText, GLOB EditorID, Option1, Option2, ..., OptionN)
  -EditorID can be a plain string, or a tuple of multiple Editor IDs.  If
  it's a tuple, then Value (below) must be a tuple of equal length, providing
  values for each GLOB
Each Option is a tuple:
  (DisplayText, Value)
  - If you enclose DisplayText in brackets like this: _(u'[Default]'),
  then the patcher will treat this option as the default value.
  - If you use _(u'Custom') as the entry, the patcher will bring up a number
  input dialog

To make a tweak Enabled by Default, enclose the tuple entry for the tweak in
a list, and make a dictionary as the second list item with {'defaultEnabled
':True}. See the UOP Vampire face fix for an example of this (in the GMST
Tweaks)
"""
GlobalsTweaks = [
    (_('Timescale'),_('Timescale will be set to:'),
        'timescale',
        ('1',         1),
        ('8',         8),
        ('10',       10),
        ('12',       12),
        ('18',       18),
        ('24',       24),
        ('[30]',     30),
        ('40',       40),
        (_('Custom'), 0),
        ),
    (_('Thieves Guild: Quest Stealing Penalty'),
     _('The penalty (in Septims) for stealing while doing a Thieves Guild job:'),
        'tgpricesteal',
        ('100',     100),
        ('150',     150),
        ('[200]',   200),
        ('300',     300),
        ('400',     400),
        (_('Custom'), 0),
        ),
    (_('Thieves Guild: Quest Killing Penalty'),
     _('The penalty (in Septims) for killing while doing a Thieves Guild job:'),
        'tgpriceperkill',
        ('250',     250),
        ('500',     500),
        ('[1000]', 1000),
        ('1500',   1500),
        ('2000',   2000),
        (_('Custom'), 0),
        ),
    (_('Thieves Guild: Quest Attacking Penalty'),
     _('The penalty (in Septims) for attacking while doing a Thieves Guild job:'),
        'tgpriceattack',
        ('100',     100),
        ('250',     250),
        ('[500]',   500),
        ('750',     750),
        ('1000',   1000),
        (_('Custom'), 0),
        ),
    (_('Crime: Force Jail'),
     _('The amount of Bounty at which a jail sentence is mandatory'),
        'crimeforcejail',
        ('1000',   1000),
        ('2500',   2500),
        ('[5000]', 5000),
        ('7500',   7500),
        ('10000', 10000),
        (_('Custom'), 0),
        ),
    ]

"""
GMST record tweaks used by patcher.patchers.multitweak_settings.GmstTweaker

Each entry is a tuple in the following format:
  (DisplayText, MouseoverText, GMST EditorID, Option1, Option2, ..., OptionN)
  - EditorID can be a plain string, or a tuple of multiple Editor IDs. If
  it's a tuple, then Value (below) must be a tuple of equal length, providing
  values for each GMST
Each Option is a tuple:
  (DisplayText, Value)
  - If you enclose DisplayText in brackets like this: _(u'[Default]'),
  then the patcher will treat this option as the default value.
  - If you use _(u'Custom') as the entry, the patcher will bring up a number
  input dialog

To make a tweak Enabled by Default, enclose the tuple entry for the tweak in
a list, and make a dictionary as the second list item with {'defaultEnabled
':True}. See the UOP Vampire facefix for an example of this (in the GMST
Tweaks)
"""
GmstTweaks = [
    (_('Arrow: Litter Count'),
     _('Maximum number of spent arrows allowed in cell.'),
        ('iArrowMaxRefCount',),
        ('[15]',      15),
        ('25',        25),
        ('35',        35),
        ('50',        50),
        ('100',      100),
        ('500',      500),
        (_('Custom'), 15),
        ),
    (_('Arrow: Litter Time'),
     _('Time before spent arrows fade away from cells and actors.'),
        ('fArrowAgeMax',),
        (_('1 Minute'),            60.0),
        (_('[1.5 Minutes]'),       90.0),
        (_('2 Minutes'),          120.0),
        (_('3 Minutes'),          180.0),
        (_('5 Minutes'),          300.0),
        (_('10 Minutes'),         600.0),
        (_('30 Minutes'),        1800.0),
        (_('1 Hour'),            3600.0),
        (_('Custom (in seconds)'), 90.0),
        ),
    (_('Arrow: Recovery from Actor'),
     _('Chance that an arrow shot into an actor can be recovered.'),
        ('iArrowInventoryChance',),
        ('[50%]',     50),
        ('60%',       60),
        ('70%',       70),
        ('80%',       80),
        ('90%',       90),
        ('100%',     100),
        (_('Custom'), 50),
        ),
    (_('Arrow: Speed'),_('Speed of full power arrow.'),
        ('fArrowSpeedMult',),
        ('x 1.2',                1500.0*1.2),
        ('x 1.4',                1500.0*1.4),
        ('x 1.6',                1500.0*1.6),
        ('x 1.8',                1500.0*1.8),
        ('x 2.0',                1500.0*2.0),
        ('x 2.2',                1500.0*2.2),
        ('x 2.4',                1500.0*2.4),
        ('x 2.6',                1500.0*2.6),
        ('x 2.8',                1500.0*2.8),
        ('x 3.0',                1500.0*3.0),
        (_('Custom (base is 1500)'), 1500.0),
        ),
    (_('Camera: Chase Tightness'),
     _('Tightness of chase camera to player turning.'),
        ('fChase3rdPersonVanityXYMult','fChase3rdPersonXYMult'),
        ('x 1.5',                            6.0,  6.0),
        ('x 2.0',                            8.0,  8.0),
        ('x 3.0',                           12.0, 12.0),
        ('x 5.0',                           20.0, 20.0),
        (_('ChaseCameraMod.esp (x 24.75)'), 99.0, 99.0),
        (_('Custom'),                        4.0,  4.0),
        ),
    (_('Camera: Chase Distance'),
     _('Distance camera can be moved away from PC using mouse wheel.'),
        ('fVanityModeWheelMax', 'fChase3rdPersonZUnitsPerSecond','fVanityModeWheelMult'),
        ('x 1.5', 600.0*1.5, 300.0*1.5, 0.15),
        ('x 2',   600.0*2.0, 300.0*2.0,  0.2),
        ('x 3',   600.0*3.0, 300.0*3.0,  0.3),
        ('x 5',   600.0*5.0,    1000.0,  0.3),
        ('x 10',   600.0*10,    2000.0,  0.3),
        (_('Custom'), 600.0,     300.0, 0.15),
        ),
    (_('Magic: Chameleon Refraction'),
     _('Chameleon with transparency instead of refraction effect.'),
        ('fChameleonMinRefraction','fChameleonMaxRefraction'),
        (_('Zero'),      0.0, 0.0),
        (_('[Normal]'), 0.01, 1.0),
        (_('Full'),      1.0, 1.0),
        (_('Custom'),   0.01, 1.0),
        ),
    (_('Compass: Disable'),
     _('No quest and/or points of interest markers on compass.'),
        ('iMapMarkerRevealDistance',),
        (_('Quests'),          1803),
        (_('POIs'),            1802),
        (_('Quests and POIs'), 1801),
        ),
    (_('Compass: POI Recognition'),
     _('Distance at which POI markers begin to show on compass.'),
        ('iMapMarkerVisibleDistance',),
        ('x 0.25',                  3000),
        ('x 0.50',                  6000),
        ('x 0.75',                  9000),
        (_('Custom (base 12000)'), 12000),
        ),
    (_('Essential NPC Unconsciousness'),
     _('Time which essential NPCs stay unconscious.'),
        ('fEssentialDeathTime',),
        (_('[10 Seconds]'),        10.0),
        (_('20 Seconds'),          20.0),
        (_('30 Seconds'),          30.0),
        (_('1 Minute'),            60.0),
        (_('1 1/2 Minutes'),   1.5*60.0),
        (_('2 Minutes'),         2*60.0),
        (_('3 Minutes'),         3*60.0),
        (_('5 Minutes'),         5*60.0),
        (_('Custom (in seconds)'), 10.0),
        ),
    (_('Fatigue from Running/Encumbrance'),
     _('Fatigue cost of running and encumbrance.'),
        ('fFatigueRunBase','fFatigueRunMult'),
        ('x 1.5',    12.0,  6.0),
        ('x 2',      16.0,  8.0),
        ('x 3',      24.0, 12.0),
        ('x 4',      32.0, 16.0),
        ('x 5',      40.0, 20.0),
        (_('Custom'), 8.0,  4.0),
        ),
    (_('Horse Turning Speed'),
     _('Speed at which horses turn.'),
        ('iHorseTurnDegreesPerSecond',),
        ('x 1.5',                  68),
        ('x 2.0',                  90),
        (_('Custom (base is 45)'), 45),
        ),
    (_('Jump Higher'),_('Maximum height player can jump to.'),
        ('fJumpHeightMax',),
        ('x 1.1',            164.0*1.1),
        ('x 1.2',            164.0*1.2),
        ('x 1.4',            164.0*1.4),
        ('x 1.6',            164.0*1.6),
        ('x 1.8',            164.0*1.8),
        ('x 2.0',            164.0*2.0),
        ('x 3.0',            164.0*3.0),
        (_('Custom (base 164)'), 164.0),
        ),
    (_('Camera: PC Death Time'),
     _("Time after player's death before reload menu appears."),
        ('fPlayerDeathReloadTime',),
        (_('15 Seconds'),     15.0),
        (_('30 Seconds'),     30.0),
        (_('1 Minute'),       60.0),
        (_('5 Minute'),      300.0),
        (_('Unlimited'), 9999999.0),
        (_('Custom'),         15.0),
        ),
    (_('Cell Respawn Time'),
     _('Time before unvisited cell respawns. But longer times increase save sizes.'),
        ('iHoursToRespawnCell',),
        (_('1 Day'),           24*1),
        (_('[3 Days]'),        24*3),
        (_('5 Days'),          24*5),
        (_('10 Days'),        24*10),
        (_('20 Days'),        24*20),
        (_('1 Month'),        24*30),
        (_('6 Months'),      24*182),
        (_('1 Year'),        24*365),
        (_('Custom (in hours)'), 72),
        ),
    (_('Combat: Recharge Weapons'),
     _('Allow recharging weapons during combat.'),
        ('iAllowRechargeDuringCombat',),
        (_('[Allow]'),  1),
        (_('Disallow'), 0),
        ),
    (_('Magic: Bolt Speed'),_('Speed of magic bolt/projectile.'),
        ('fMagicProjectileBaseSpeed',),
        ('x 1.2',             1000.0*1.2),
        ('x 1.4',             1000.0*1.4),
        ('x 1.6',             1000.0*1.6),
        ('x 1.8',             1000.0*1.8),
        ('x 2.0',             1000.0*2.0),
        ('x 2.2',             1000.0*2.2),
        ('x 2.4',             1000.0*2.4),
        ('x 2.6',             1000.0*2.6),
        ('x 2.8',             1000.0*2.8),
        ('x 3.0',             1000.0*3.0),
        (_('Custom (base 1000)'), 1000.0),
        ),
    (_('Msg: Equip Misc. Item'),_('Message upon equipping misc. item.'),
        ('sCantEquipGeneric',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Auto Saving'),_('Message upon auto saving.'),
        ('sAutoSaving',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Harvest Failure'),
     _('Message upon failure at harvesting flora.'),
        ('sFloraFailureMessage',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Harvest Success'),
     _('Message upon success at harvesting flora.'),
        ('sFloraSuccessMessage',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Quick Save'),_('Message upon quick saving.'),
        ('sQuickSaving',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Horse Stabled'),
     _('Message upon fast traveling with a horse to a city.'),
        ('sFastTravelHorseatGate',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: No Fast Travel'),
     _('Message when attempting to fast travel when fast travel is unavailable due to location.'),
        ('sNoFastTravelScriptBlock',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Loading Area'),_('Message when background loading area.'),
        ('sLoadingArea',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Quick Load'),_('Message when quick loading.'),
        ('sQuickLoading',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Msg: Not Enough Charge'),
     _('Message when enchanted item is out of charge.'),
        ('sNoCharge',),
        (_('[None]'), ' '),
        ('.',         '.'),
        (_('Hmm...'), _('Hmm...')),
        (_('Custom'), _(' ')),
        ),
    (_('Cost Multiplier: Repair'),
     _('Cost factor for repairing items.'),
        ('fRepairCostMult',),
        ('0.1',       0.1),
        ('0.2',       0.2),
        ('0.3',       0.3),
        ('0.4',       0.4),
        ('0.5',       0.5),
        ('0.6',       0.6),
        ('0.7',       0.7),
        ('0.8',       0.8),
        ('[0.9]',     0.9),
        ('1.0',       1.0),
        (_('Custom'), 0.9),
        ),
    (_('Greeting Distance'),
     _('Distance at which NPCs will greet the player. Default: 150'),
        ('fAIMinGreetingDistance',),
        ('100',       100.0),
        ('125',       125.0),
        ('[150]',     150.0),
        (_('Custom'), 150.0),
        ),
    (_('Cost Multiplier: Recharge'),_('Cost factor for recharging items.'),
        ('fRechargeGoldMult',),
        ('0.1',       0.1),
        ('0.2',       0.2),
        ('0.3',       0.3),
        ('0.5',       0.5),
        ('0.7',       0.7),
        ('1.0',       1.0),
        ('1.5',       1.5),
        ('[2.0]',     2.0),
        (_('Custom'), 2.0),
        ),
    (_('Master of Mercantile extra gold amount'),
     _('How much more barter gold all merchants have for a master of mercantile.'),
        ('iPerkExtraBarterGoldMaster',),
        ('300',       300),
        ('400',       400),
        ('[500]',     500),
        ('600',       600),
        ('800',       800),
        ('1000',     1000),
        (_('Custom'), 500),
        ),
    (_('Combat: Max Actors'),
     _('Maximum number of actors that can actively be in combat with the player.'),
        ('iNumberActorsInCombatPlayer',),
        ('[10]',      10),
        ('15',        15),
        ('20',        20),
        ('30',        30),
        ('40',        40),
        ('50',        50),
        ('80',        80),
        (_('Custom'), 10),
        ),
    (_('Crime: Alarm Distance'),
     _('Distance from player that NPCs(guards) will be alerted of a crime.'),
        ('iCrimeAlarmRecDistance',),
        ('6000',      6000),
        ('[4000]',    4000),
        ('3000',      3000),
        ('2000',      2000),
        ('1000',      1000),
        ('500',        500),
        (_('Custom'), 4000),
        ),
    (_('Cost Multiplier: Enchantment'),
     _('Cost factor for enchanting items, OOO default is 120, vanilla 10.'),
        ('fEnchantmentGoldMult',),
        ('[10]',      10.0),
        ('20',        20.0),
        ('30',        30.0),
        ('50',        50.0),
        ('70',        70.0),
        ('90',        90.0),
        ('120',      120.0),
        ('150',      150.0),
        (_('Custom'), 10.0),
        ),
    (_('Cost Multiplier: Spell Making'),_('Cost factor for making spells.'),
        ('fSpellmakingGoldMult',),
        ('[3]',       3.0),
        ('5',         5.0),
        ('8',         8.0),
        ('10',       10.0),
        ('15',       15.0),
        (_('Custom'), 3.0),
        ),
    (_('AI: Max Active Actors'),
     _('Maximum actors whose AI can be active. Must be higher than Combat: Max Actors'),
        ('iAINumberActorsComplexScene',),
        ('20',                 20),
        ('[25]',               25),
        ('30',                 30),
        ('35',                 35),
        (_('MMM Default: 40'), 40),
        ('50',                 50),
        ('60',                 60),
        ('100',               100),
        (_('Custom'),          25),
        ),
    (_('Magic: Max Player Summons'),
     _('Maximum number of creatures the player can summon.'),
        ('iMaxPlayerSummonedCreatures',),
        ('[1]',       1),
        ('3',         3),
        ('5',         5),
        ('8',         8),
        ('10',       10),
        (_('Custom'), 1),
        ),
    (_('Combat: Max Ally Hits'),
     _('Maximum number of hits on an ally allowed in combat before the ally will attack the hitting character.'),
        ('iAllyHitAllowed',),
        ('3',         3),
        ('[5]',       5),
        ('8',         8),
        ('10',       10),
        ('15',       15),
        (_('Custom'), 5),
        ),
    (_('Magic: Max NPC Summons'),
     _('Maximum number of creatures that each NPC can summon'),
        ('iAICombatMaxAllySummonCount',),
        ('1',         1),
        ('[3]',       3),
        ('5',         5),
        ('8',         8),
        ('10',       10),
        ('15',       15),
        (_('Custom'), 3),
        ),
    (_('Bounty: Attack'),_("Bounty for attacking a 'good' npc."),
        ('iCrimeGoldAttackMin',),
        ('300',       300),
        ('400',       400),
        ('[500]',     500),
        ('650',       650),
        ('800',       800),
        (_('Custom'), 500),
        ),
    (_('Bounty: Horse Theft'),_('Bounty for horse theft'),
        ('iCrimeGoldStealHorse',),
        ('100',       100),
        ('200',       200),
        ('[250]',     250),
        ('300',       300),
        ('450',       450),
        (_('Custom'), 250),
        ),
    (_('Bounty: Theft'),_('Bounty for stealing, as fraction of item value.'),
        ('fCrimeGoldSteal',),
        ('1/4',      0.25),
        ('[1/2]',     0.5),
        ('3/4',      0.75),
        ('1',         1.0),
        (_('Custom'), 0.5),
        ),
    (_('Combat: Alchemy'),_('Allow alchemy during combat.'),
        ('iAllowAlchemyDuringCombat',),
        (_('Allow'),      1),
        (_('[Disallow]'), 0),
        ),
    (_('Combat: Repair'),_('Allow repairing armor/weapons during combat.'),
        ('iAllowRepairDuringCombat',),
        (_('Allow'),      1),
        (_('[Disallow]'), 0),
        ),
    (_('Companions: Max Number'),
     _('Maximum number of actors following the player.'),
        ('iNumberActorsAllowedToFollowPlayer',),
        ('2',         2),
        ('4',         4),
        ('[6]',       6),
        ('8',         8),
        ('10',       10),
        (_('Custom'), 6),
        ),
    (_('Training Max'),
     _('Maximum number of Training allowed by trainers.'),
        ('iTrainingSkills',),
        ('1',               1),
        ('[5]',             5),
        ('8',               8),
        ('10',             10),
        ('20',             20),
        (_('Unlimited'), 9999),
        (_('Custom'),       0),
        ),
    (_('Combat: Maximum Armor Rating'),
     _('The Maximum amount of protection you will get from armor.'),
        ('fMaxArmorRating',),
        ('50',        50.0),
        ('75',        75.0),
        ('[85]',      85.0),
        ('90',        90.0),
        ('95',        95.0),
        (_('Custom'), 85.0),
        ),
    (_('Warning: Interior Distance to Hostiles'),
     _('The minimum distance hostile actors have to be to be allowed to sleep, travel etc, when inside interiors.'),
        ('fHostileActorInteriorDistance',),
        ('10',          10.0),
        ('100',        100.0),
        ('500',        500.0),
        ('1000',      1000.0),
        ('[2000]',    2000.0),
        ('3000',      3000.0),
        ('4000',      4000.0),
        (_('Custom'), 2000.0),
        ),
    (_('Warning: Exterior Distance to Hostiles'),
     _('The minimum distance hostile actors have to be to be allowed to sleep, travel etc, when outside.'),
        ('fHostileActorExteriorDistance',),
        ('10',          10.0),
        ('100',        100.0),
        ('500',        500.0),
        ('1000',      1000.0),
        ('2000',      2000.0),
        ('[3000]',    3000.0),
        ('4000',      4000.0),
        ('5000',      5000.0),
        ('6000',      6000.0),
        (_('Custom'), 3000.0),
        ),
    [(_('UOP Vampire Aging and Face Fix.esp'),
      _("Duplicate of UOP component that disables vampire aging (fixes a bug). Use instead of 'UOP Vampire Aging & Face Fix.esp' to save an esp slot."),
        ('iVampirismAgeOffset',),
        ('Fix it!', 0),
        ),
     {'defaultEnabled':True}],
    (_('AI: Max Dead Actors'),
     _("Maximum number of dead actors allowed before they're removed."),
        ('iRemoveExcessDeadCount', 'iRemoveExcessDeadTotalActorCount','iRemoveExcessDeadComplexTotalActorCount',
         'iRemoveExcessDeadComplexCount', 'fRemoveExcessDeadTime','fRemoveExcessComplexDeadTime'),
        ('[x 1]',   int(15*1),   int(20*1),   int(20*1), int(3*1),  10.0*1.0,  2.5*1.0),
        ('x 1.5', int(15*1.5), int(20*1.5), int(20*1.5), int(3*2),  10.0*3.0,  2.5*3.0),
        ('x 2',     int(15*2),   int(20*2),   int(20*2), int(3*3),  10.0*5.0,  2.5*5.0),
        ('x 2.5', int(15*2.5), int(20*2.5), int(20*2.5), int(3*4),  10.0*7.0,  2.5*7.0),
        ('x 3',     int(15*3),   int(20*3),   int(20*3), int(3*5),  10.0*9.0,  2.5*9.0),
        ('x 3.5', int(15*3.5), int(20*3.5), int(20*3.5), int(3*6), 10.0*11.0, 2.5*11.0),
        ('x 4',     int(15*4),   int(20*4),   int(20*4), int(3*7), 10.0*13.0, 2.5*13.0),
        (_('Custom'),      15,          20,          20,        3,      10.0,      2.5),
        ),
    (_('Inventory Quantity Prompt'),
     _('Number of items in a stack at which point Oblivion prompts for a quantity.'),
        ('iInventoryAskQuantityAt',),
        ('1',                1),
        ('2',                2),
        ('[3]',              3),
        ('4',                4),
        ('10',              10),
        (_('No Prompt'), 99999),
        (_('Custom'),        3),
        ),
    (_('Crime: Trespass Fine'),_('Fine in septims for trespassing.'),
        ('iCrimeGoldTresspass',),
        ('1',         1),
        ('[5]',       5),
        ('8',         8),
        ('10',       10),
        ('20',       20),
        (_('Custom'), 5),
        ),
    (_('Crime: Pickpocketing Fine'),_('Fine in septims for trespassing.'),
        ('iCrimeGoldPickpocket',),
        ('5',          5),
        ('8',          8),
        ('10',        10),
        ('[25]',      25),
        ('50',        50),
        ('100',      100),
        (_('Custom'), 25),
        ),
    (_('Leveled Creature Max Level Difference'),
     _('Maximum difference to player level for leveled creatures.'),
        ('iLevCreaLevelDifferenceMax',),
        ('1',               1),
        ('5',               5),
        ('[8]',             8),
        ('10',             10),
        ('20',             20),
        (_('Unlimited'), 9999),
        (_('Custom'),       8),
        ),
    (_('Leveled Item Max Level Difference'),
     _('Maximum difference to player level for leveled items.'),
        ('iLevItemLevelDifferenceMax',),
        ('1',               1),
        ('5',               5),
        ('[8]',             8),
        ('10',             10),
        ('20',             20),
        (_('Unlimited'), 9999),
        (_('Custom'),       8),
        ),
    (_('Actor Strength Encumbrance Multiplier'),
     _("Actor's Strength X this = Actor's Encumbrance capacity."),
        ('fActorStrengthEncumbranceMult',),
        ('1',                 1.0),
        ('3',                 3.0),
        ('[5]',               5.0),
        ('8',                 8.0),
        ('10',               10.0),
        ('20',               20.0),
        (_('Unlimited'), 999999.0),
        (_('Custom'),         5.0),
        ),
    (_('NPC Blood'),_('NPC Blood Splatter Textures.'),
        ('sBloodTextureDefault', 'sBloodTextureExtra1','sBloodTextureExtra2', 'sBloodParticleDefault', 'sBloodParticleExtra1','sBloodParticleExtra2'),
        (_('No Blood'), '', '', '', '', '', ''),
        (_('Custom'),   '', '', '', '', '', ''),
        ),
    (_('AI: Max Smile Distance'),
     _('Maximum distance for NPCs to start smiling.'),
        ('fAIMaxSmileDistance',),
        (_('No Smiles'),         0.0),
        (_('[Default (128)]'), 128.0),
        (_('Custom'),          128.0),
        ),
    (_('Drag: Max Moveable Weight'),
     _('Maximum weight to be able move things with the drag key.'),
        ('fMoveWeightMax',),
        (_('MovableBodies.esp (1500)'), 1500.0),
        (_('[Default (150)]'),           150.0),
        (_('Custom'),                    150.0),
        ),
    (_('AI: Conversation Chance'),
     _('Chance of NPCs engaging each other in conversation (possibly also with the player).'),
        ('fAISocialchanceForConversation',),
        ('10',         10.0),
        ('25',         25.0),
        ('50',         50.0),
        ('[100]',     100.0),
        (_('Custom'), 100.0),
        ),
    (_('AI: Conversation Chance - Interior'),
     _('Chance of NPCs engaging each other in conversation (possibly also with the player) - In Interiors.'),
        ('fAISocialchanceForConversationInterior',),
        ('10',         10.0),
        ('[25]',       25.0),
        ('50',         50.0),
        ('100',       100.0),
        (_('Custom'), 100.0),
        ),
    ]

#------------------------------------------------------------------------------
# ListsMerger
#------------------------------------------------------------------------------
listTypes = ('LVLC','LVLI','LVSP',)
#------------------------------------------------------------------------------
# NamesPatcher
#------------------------------------------------------------------------------
namesTypes = {'ALCH', 'AMMO', 'APPA', 'ARMO', 'BOOK', 'BSGN', 'CLAS', 'CLOT',
              'CONT', 'CREA', 'DOOR', 'EYES', 'FACT', 'FLOR', 'HAIR', 'INGR',
              'KEYM', 'LIGH', 'MISC', 'NPC_', 'RACE', 'SGST', 'SLGM', 'SPEL',
              'WEAP'}
#------------------------------------------------------------------------------
# ItemPrices Patcher
#------------------------------------------------------------------------------
pricesTypes = {'ALCH':{},'AMMO':{},'APPA':{},'ARMO':{},'BOOK':{},'CLOT':{},'INGR':{},'KEYM':{},'LIGH':{},'MISC':{},'SGST':{},'SLGM':{},'WEAP':{}}
#------------------------------------------------------------------------------
# StatsImporter
#------------------------------------------------------------------------------
statsTypes = {
    'ALCH':('eid', 'weight', 'value'),
    'AMMO':('eid', 'weight', 'value', 'damage', 'speed', 'enchantPoints'),
    'APPA':('eid', 'weight', 'value', 'quality'),
    'ARMO':('eid', 'weight', 'value', 'health', 'strength'),
    'BOOK':('eid', 'weight', 'value', 'enchantPoints'),
    'CLOT':('eid', 'weight', 'value', 'enchantPoints'),
    'INGR':('eid', 'weight', 'value'),
    'KEYM':('eid', 'weight', 'value'),
    'LIGH':('eid', 'weight', 'value', 'duration'),
    'MISC':('eid', 'weight', 'value'),
    'SGST':('eid', 'weight', 'value', 'uses'),
    'SLGM':('eid', 'weight', 'value'),
    'WEAP':('eid', 'weight', 'value', 'health', 'damage', 'speed', 'reach', 'enchantPoints'),
}
statsHeaders = (
    #--Alch
    ('ALCH',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'))) + '"\n')),
    #Ammo
    ('AMMO',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('Damage'),_('Speed'),_('EPoints'))) + '"\n')),
    #--Apparatus
    ('APPA',
        ('"' + '","'.join((_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('Quality'))) + '"\n')),
    #--Armor
    ('ARMO',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('Health'),_('AR'))) + '"\n')),
    #Books
    ('BOOK',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('EPoints'))) + '"\n')),
    #Clothing
    ('CLOT',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('EPoints'))) + '"\n')),
    #Ingredients
    ('INGR',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'))) + '"\n')),
    #--Keys
    ('KEYM',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'))) + '"\n')),
    #Lights
    ('LIGH',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('Duration'))) + '"\n')),
    #--Misc
    ('MISC',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'))) + '"\n')),
    #Sigilstones
    ('SGST',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('Uses'))) + '"\n')),
    #Soulgems
    ('SLGM',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'))) + '"\n')),
    #--Weapons
    ('WEAP',
        ('"' + '","'.join((_('Type'),_('Mod Name'),_('ObjectIndex'),
        _('Editor Id'),_('Weight'),_('Value'),_('Health'),_('Damage'),
        _('Speed'),_('Reach'),_('EPoints'))) + '"\n')),
)

#------------------------------------------------------------------------------
# SoundPatcher
#------------------------------------------------------------------------------
# Needs longs in SoundPatcher
soundsLongsTypes = {'ACTI', 'CONT', 'CREA', 'DOOR', 'LIGH', 'MGEF', 'SOUN',
                    'WATR', 'WTHR'}
soundsTypes = {
    "ACTI": ('sound',),
    "CONT": ('soundOpen','soundClose',),
    "CREA": ('footWeight','inheritsSoundsFrom','sounds',),
    "DOOR": ('soundOpen','soundClose','soundLoop',),
    "LIGH": ('sound',),
    "MGEF": ('castingSound','boltSound','hitSound','areaSound',),
#    "REGN": ('entries.sounds',),
    "SOUN": ('soundFile', 'minDistance', 'maxDistance', 'freqAdjustment', 'staticAtten',
             'stopTime', 'startTime',),
    "WATR": ('sound',),
    "WTHR": ('sounds',),
}

#------------------------------------------------------------------------------
# CellImporter
#------------------------------------------------------------------------------
cellAutoKeys = {'C.Climate', 'C.Light', 'C.Water', 'C.Owner', 'C.Name',
                'C.RecordFlags', 'C.Music'}#,u'C.Maps'}
cellRecAttrs = {
    'C.Climate': ('climate',),
    'C.Light': ('ambientRed','ambientGreen','ambientBlue','unused1',
                'directionalRed','directionalGreen','directionalBlue','unused2',
                'fogRed','fogGreen','fogBlue','unused3',
                'fogNear','fogFar','directionalXY','directionalZ',
                'directionalFade','fogClip'),
    'C.Music': ('music',),
    'C.Name': ('full',),
    'C.Owner': ('ownership',),
    'C.RecordFlags': ('flags1',), # Yes seems funky but thats the way it is
    'C.Water': ('water','waterHeight',),
}
cellRecFlags = {
    'C.Climate': 'behaveLikeExterior',
    'C.Music': '',
    'C.Name': '',
    'C.Owner': 'publicPlace',
    'C.Water': 'hasWater',
    'C.Light': '',
    'C.RecordFlags': '',
}
#------------------------------------------------------------------------------
# GraphicsPatcher
#------------------------------------------------------------------------------
graphicsTypes = {
    "ACTI": ('model',),
    "ALCH": ('iconPath','model',),
    "AMMO": ('iconPath','model',),
    "APPA": ('iconPath','model',),
    "ARMO": ('maleBody','maleWorld','maleIconPath','femaleBody','femaleWorld','femaleIconPath','flags',),
    "BOOK": ('iconPath','model',),
    "BSGN": ('iconPath',),
    "CLAS": ('iconPath',),
    "CLOT": ('maleBody','maleWorld','maleIconPath','femaleBody','femaleWorld','femaleIconPath','flags',),
    "CREA": ('bodyParts','nift_p',),
    "DOOR": ('model',),
    "EFSH": ('particleTexture','fillTexture','flags','unused1','memSBlend',
    'memBlendOp','memZFunc','fillRed','fillGreen','fillBlue',
    'unused2','fillAIn','fillAFull','fillAOut','fillAPRatio',
    'fillAAmp','fillAFreq','fillAnimSpdU','fillAnimSpdV','edgeOff',
    'edgeRed','edgeGreen','edgeBlue','unused3','edgeAIn',
    'edgeAFull','edgeAOut','edgeAPRatio','edgeAAmp','edgeAFreq',
    'fillAFRatio','edgeAFRatio','memDBlend','partSBlend',
    'partBlendOp','partZFunc','partDBlend','partBUp','partBFull',
    'partBDown','partBFRatio','partBPRatio','partLTime',
    'partLDelta','partNSpd','partNAcc','partVel1','partVel2',
    'partVel3','partAcc1','partAcc2','partAcc3','partKey1',
    'partKey2','partKey1Time','partKey2Time','key1Red','key1Green',
    'key1Blue','unused4','key2Red','key2Green','key2Blue','unused5',
    'key3Red','key3Green','key3Blue','unused6','key1A','key2A',
    'key3A','key1Time','key2Time','key3Time',),
    "FLOR": ('model',),
    "FURN": ('model',),
    "GRAS": ('model',),
    "INGR": ('iconPath','model',),
    "KEYM": ('iconPath','model',),
    "LIGH": ('iconPath','model',),
    "LSCR": ('iconPath',),
    "LTEX": ('iconPath',),
    "MGEF": ('iconPath','model',),
    "MISC": ('iconPath','model',),
    "REGN": ('iconPath',),
    "SGST": ('iconPath','model',),
    "SLGM": ('iconPath','model',),
    "STAT": ('model',),
    "TREE": ('iconPath','model',),
    "WEAP": ('iconPath','model',),
}
graphicsLongsTypes = set(graphicsTypes) # also MGEF (with different attributes)
graphicsFidTypes = {"MGEF": ('effectShader', 'enchantEffect', 'light',)}
graphicsModelAttrs = ('model',)
#------------------------------------------------------------------------------
# Inventory Patcher
#------------------------------------------------------------------------------
inventoryTypes = ('CREA','NPC_','CONT',)

# Record type to name dictionary
record_type_name = {
    'ALCH': _('Potions'),
    'AMMO': _('Ammo'),
    'APPA': _('Apparatuses'),
    'ARMO': _('Armors'),
    'BOOK': _('Books'),
    'CLOT': _('Clothes'),
    'INGR': _('Ingredients'),
    'KEYM': _('Keys'),
    'LIGH': _('Lights'),
    'MISC': _('Misc'),
    'SGST': _('Sigil Stones'),
    'SLGM': _('Soulgems'),
    'SPEL': _('Spells'),
    'WEAP': _('Weapons'),
}

# xEdit menu string and key for expert setting
xEdit_expert = (_('Tes4Edit Expert'), 'tes4View.iKnowWhatImDoing')
